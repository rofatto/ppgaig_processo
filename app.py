import streamlit as st
import pandas as pd
from io import BytesIO
import json
from PyPDF2 import PdfMerger, PdfReader
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, PageBreak, Table, TableStyle
from reportlab.lib.pagesizes import A4
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.lib import colors

st.set_page_config(page_title="Formul√°rio PPGAIG", layout="wide")

# Carregar progresso
uploaded_json = st.file_uploader("üì§ Carregar Progresso (.json)", type="json")
if uploaded_json:
    st.session_state.form_data = json.load(uploaded_json)
    st.success("‚úÖ Progresso carregado com sucesso!")
else:
    if 'form_data' not in st.session_state:
        st.session_state.form_data = {}

form_data = st.session_state.form_data

# Abas
aba1, aba2, aba3 = st.tabs(["Inscri√ß√£o", "Sele√ß√£o da Linha de Pesquisa", "Pontua√ß√£o do Curr√≠culo"])

# Inscri√ß√£o
with aba1:
    st.header("Inscri√ß√£o")
    form_data['nome'] = st.text_input("Nome completo", form_data.get('nome', ''))
    form_data['cpf'] = st.text_input("CPF", form_data.get('cpf', ''))
    form_data['sexo'] = st.radio("Sexo", ["Masculino", "Feminino", "Prefiro n√£o identificar"], index=["Masculino", "Feminino", "Prefiro n√£o identificar"].index(form_data.get('sexo', "Masculino")))
    form_data['modalidade'] = st.radio("Modalidade", ["Regular", "Especial"], index=["Regular", "Especial"].index(form_data.get('modalidade', "Regular")))
    form_data['quota'] = st.selectbox("Tipo de Quota", ["Ampla Concorr√™ncia", "Pretos, Pardos, Ind√≠genas", "Pessoas com Defici√™ncia", "Pessoas sob pol√≠ticas humanit√°rias no Brasil"], index=["Ampla Concorr√™ncia", "Pretos, Pardos, Ind√≠genas", "Pessoas com Defici√™ncia", "Pessoas sob pol√≠ticas humanit√°rias no Brasil"].index(form_data.get('quota', "Ampla Concorr√™ncia")))

# Sele√ß√£o da Linha de Pesquisa
with aba2:
    st.header("Sele√ß√£o da Linha de Pesquisa")
    form_data['email'] = st.text_input("Email", form_data.get('email', ''))
    from datetime import date
    default_date = pd.to_datetime(form_data.get('data_nascimento', '1990-01-01')).date()
    form_data['data_nascimento'] = st.date_input("Data de Nascimento (ANO/M√äS/DIA)", value=default_date, min_value=date(1900,1,1), max_value=date.today()).strftime('%Y-%m-%d')
    form_data['ano_conclusao'] = st.number_input("Ano de Conclus√£o do Curso de Gradua√ß√£o", 1950, 2100, int(form_data.get('ano_conclusao', 2024)))

    form_data['linha'] = st.radio("Selecione apenas 1 (uma) linha de pesquisa:", ["Linha 1: Desenvolvimento e aplica√ß√µes de m√©todos em informa√ß√µes geoespaciais", "Linha 2: Sistemas integrados de produ√ß√£o vegetal"], index=["Linha 1: Desenvolvimento e aplica√ß√µes de m√©todos em informa√ß√µes geoespaciais", "Linha 2: Sistemas integrados de produ√ß√£o vegetal"].index(form_data.get('linha', "Linha 1: Desenvolvimento e aplica√ß√µes de m√©todos em informa√ß√µes geoespaciais")))

    st.markdown("""
    üìù **Classifique as sub√°reas por ordem de prefer√™ncia:**  
    - Linha 1: 1 a 5.  
    - Linha 2: 1 a 13.  
    """)

    subareas_l1 = [
        "Sensoriamento Remoto de Sistemas Agr√≠colas",
        "Desenvolvimento de sistemas de mapeamento m√≥vel. Utiliza√ß√£o de aeronaves remotamente pilotadas na Fitotecnia",
        "Sistemas computacionais inteligentes na agricultura e informa√ß√µes geoespaciais",
        "Posicionamento por GNSS. Modelagem e an√°lise de dados geoespaciais. Controle de qualidade de informa√ß√µes geoespaciais",
        "Sensores Aplicados a Agricultura de Precis√£o"
    ]

    subareas_l2 = [
        "Biotecnologia na agricultura",
        "Recursos florestais",
        "Nutri√ß√£o, Manejo e cultura de tecidos em hortali√ßas e plantas medicinais",
        "Micologia Aplicada. Patologia Florestal. Patologia de Sementes. Sensoriamento remoto aplicado √† Patologia Florestal",
        "Nutri√ß√£o mineral e metabolismo de plantas",
        "Manejo integrado de plantas daninhas. Uso de herbicidas na Agricultura. Sistemas de informa√ß√£o para controle de plantas",
        "Microbiologia agr√≠cola",
        "Controle biol√≥gico de doen√ßas de plantas. Controle biol√≥gico de plantas daninhas. Sensoriamento remoto aplicado √† Fitopatologia",
        "Mecaniza√ß√£o agr√≠cola. Tecnologia de aplica√ß√£o de precis√£o",
        "Manejo da √°gua em sistemas agr√≠colas irrigados",
        "Melhoramento gen√©tico de hortali√ßas e fenotipagem de alto desempenho",
        "Entomologia agr√≠cola: manejo integrado, controle biol√≥gico, controle microbiano",
        "Tecnologias aplicadas √† cafeicultura"
    ]

    subareas = subareas_l1 if "Linha 1" in form_data['linha'] else subareas_l2

    form_data['ordem_pref'] = []
    for i, sub in enumerate(subareas):
        ordem_key = f"sub_{sub}"
        form_data[ordem_key] = st.number_input(f"{sub}", 1, len(subareas), int(form_data.get(ordem_key, i+1)))
        form_data['ordem_pref'].append((form_data[ordem_key], sub))

# Pontua√ß√£o
with aba3:
    st.header("Pontua√ß√£o do Curr√≠culo")
    form_data['historico_media'] = st.number_input("M√©dia aritm√©tica das disciplinas cursadas na gradua√ß√£o:", min_value=0.0, max_value=10.0, step=0.01, format="%.2f", value=float(form_data.get('historico_media', 7.0)))

# Salvar progresso
json_data = json.dumps(form_data)
st.download_button("üíæ Salvar Progresso", json_data, file_name="formulario_progresso.json", mime="application/json")
